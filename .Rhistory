setwd("/home/lepton/Dropbox/Cousera/DS/Repro")
?unz
data <- read.csv(unz("activity.zip", "activity.csv"))
dir()
setwd("/home/lepton/Dropbox/Cousera/DS/Repro/RepData_PeerAssessment1
")
setwd("/home/lepton/Dropbox/Cousera/DS/Repro/RepData_PeerAssessment1")
data <- read.csv(unz("activity.zip", "activity.csv"))
mean(steps, rm.na = T)
mean(data$steps, rm.na = T)
head(data$steps)
?mean
mean(data$steps, na.rm = T)
?median
median(data$steps, na.rm = T)
head(data$date)
?read.csv
data <- read.csv(unz("activity.zip", "activity.csv"), stringsAsFactors = F)
data$date <- strptime(data$date, format = "%Y-%m-%d")
data <- read.csv(unz("activity.zip", "activity.csv"), stringsAsFactors = T)
by(data, levels(data$date), FUN = mean)
by(data, data$date, FUN = mean)
by(data, data$date, FUN = mean, na.rm = T)
?mean
by(data, data$date, FUN = mean, data$steps na.rm = T)
by(data, data$date, summary)
?aggregate
aggregate(data$steps, by = data$date, FUN = mean, na.rm = T)
aggregate(data$steps, by = list(data$date), FUN = mean, na.rm = T)
data$date <- strptime(data$date, format = "%Y-%m-%d")
t
means <- aggregate(data$steps, by = list(data$date), FUN = mean, na.rm = T)
## Loading and preprocessing the data
data <- read.csv(unz("activity.zip", "activity.csv"), stringsAsFactors = T)
median(data$steps, na.rm = T)
means <- aggregate(data$steps, by = list(data$date), FUN = mean, na.rm = T)
hist(data$steps, data$date)
data$pDate <- strptime(date$date, format = "%Y-%m-%d")
data$pDate <- strptime(as.character(date$date), format = "%Y-%m-%d")
data$pDate <- strptime(as.character(data$date), format = "%Y-%m-%d")
means <- aggregate(data$steps, by = list(data$pDate), FUN = mean, na.rm = T)
hist(data$steps, data$pDate)
hist( data$pDate, data$steps)
hist( data$pDate)
hist( data$date)
hist( data$steps)
total <- aggregate(data$steps, by = list(data$date), FUN = sum, na.rm = T)
hist(total[2])
names(total) <- c("Date", "TotalSteps")
hist(total$TotalSteps)
?hist
hist(total$TotalSteps, title = "Total Steps per Day", xlab = "Steps")
?hist
hist(total$TotalSteps, main = "Total Steps per Day", xlab = "Steps")
intervals <- aggregate(data$steps, by = list(data$date), FUN = mean, na.rm = T)
intervals <- aggregate(data$steps, by = list(data$interval), FUN = mean, na.rm = T)
names(intervals) <- c("Interval", "Mean")
?plot
plot(intervals$Interval, intervals$Mean)
names(intervals) <- c("Interval", "Mean", type = "l")
intervals <- aggregate(data$steps, by = list(data$interval), FUN = mean, na.rm = T)
names(intervals) <- c("Interval", "Mean")
plot(intervals$Interval, intervals$Mean, type = "l")
plot(intervals$Interval, intervals$Mean, type = "l", main = "Steps By Interval", xlab = "5 Minute Interval", ylab = "Mean")
?max
print(intervals$Interval[max(intervals$Mean)])
max(intervals$Mean)
print(intervals$Interval[intervals$Mean == imax(intervals$Mean)])
print(intervals$Interval[intervals$Mean == max(intervals$Mean)])
as.numeric(is.na(data$steps))
sum(as.numeric(is.na(data$steps)))
new_data <- data;
indexes <- wich(is.na(new_data))
indexes <- which(is.na(new_data))
?join
?merge
new_intervals <-  new_data$interval[indexes]
dim(new_intervals)
length(new_intervals)
for (i in 1:length(new_intervals)){
new_data$steps[i] <- intervals$Mean[intervals$interval == new_intervals[i]]
}
for (i in 1:length(new_intervals)){
new_data$steps[i] <- intervals$Mean[intervals$Interval == new_intervals[i]]
}
is.na(new_data$steps)
sum(as.numeric(is.na(new_data$steps)))
new_data <- data;
indexes <- which(is.na(new_data))
new_intervals <-  new_data$interval[indexes]
for (i in 1:length(new_intervals)){
new_data$steps[indexes[i]] <- intervals$Mean[intervals$Interval == new_intervals[i]]
}
sum(as.numeric(is.na(new_data$steps)))
?weekday
?weekdays
head(weekdays(data$pDate))
factor
?factor
?weekdays
head(weekdays(data$pDate))
Sys.setlocale("LC_TIME", "C")
head(weekdays(data$pDate))
Sys.setlocale("LC_TIME", "C")
data_weekdays <- weekdays(new_data$pDate);
weekend_indexes <- which(data_weekdays == "Saturday" | data_weekdays == "Sunday")
weekday_indexes <-  which(data_weekdays != "Saturday" & data_weekdays != "Sunday")
new_data$weekDays <- data_weekdays
new_data$weekDays[weekend_indexes] <- "Weekend"
new_data$weekDays[weekday_indexes] <- "Weekday"
new_data$weekDays <- as.factor(new_data$weekDays)
?qplot
??qplot
total <- aggregate(new_data$steps, by = list(new_data$weekDays), FUN = sum)
names(total) <- c("Weekdays", "TotalSteps")
g <- ggplot(new_data, aes(interval, steps))
p <- g + geom_point(aes(color = weekDays), size = 4) +
facet_grid(. ~ weekDays) +
labs(title = "Baltimore_emissions.R Emissions", y = "Emissions (tons)", x = "Year") +
theme_bw(base_family = "Times")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
g <- ggplot(new_data, aes(interval, steps))
p <- g + geom_point(aes(color = weekDays), size = 4) +
facet_grid(. ~ weekDays) +
labs(title = "Baltimore_emissions.R Emissions", y = "Emissions (tons)", x = "Year") +
theme_bw(base_family = "Times")
p
g <- ggplot(new_data, aes(interval, steps))
p <- g + geom_point(aes(color = weekDays), size = 4) +
facet_grid(. ~ weekDays) +
labs(title = "Steps by Weekday", y = "Steps", x = "Interval") +
theme_bw(base_family = "Times")
p
g <- ggplot(new_data, aes(interval, steps))
p <- g + geom_line(aes(color = weekDays), size = 4) +
facet_grid(. ~ weekDays) +
labs(title = "Steps by Weekday", y = "Steps", x = "Interval") +
theme_bw(base_family = "Times")
p
g <- ggplot(new_data, aes(interval, steps))
p <- g + geom_line(aes(color = weekDays)) +
facet_grid(. ~ weekDays) +
labs(title = "Steps by Weekday", y = "Steps", x = "Interval") +
theme_bw(base_family = "Times")
p
print(p)
